structures:
  - name: AnonymousContributor
    updatable: false
    attributes:
      - name: contributions
        type: int
      - name: name
        type: string
      - name: type
        type: string
  - name: Branch
    updatable: false
    attributes:
      - name: commit
        type: Commit
      - name: name
        type: string
    deprecated_attributes:
      - name: _links
        reason: todoAlpha What should we do with _links?
  - name: ComparisonResult
    updatable: false
    attributes:
      - name: ahead_by
        type: int
      - name: base_commit
        type: Commit
      - name: behind_by
        type: int
      - name: commits
        type:
          container: list
          content: Commit
      - name: diff_url
        type: string
      - name: files
        type:
          container: list
          content: Repository.ComparisonResultFile
      - name: html_url
        type: string
      - name: merge_base_commit
        type: Commit
      - name: patch_url
        type: string
      - name: permalink_url
        type: string
      - name: status
        type: string
      - name: total_commits
        type: int
      - name: url
        type: string
  - name: ComparisonResultFile
    updatable: false
    attributes:
      - name: additions
        type: int
      - name: blob_url
        type: string
      - name: changes
        type: int
      - name: contents_url
        type: string
      - name: deletions
        type: int
      - name: filename
        type: string
      - name: patch
        type: string
      - name: raw_url
        type: string
      - name: sha
        type: string
      - name: status
        type: string
  - name: ContentCommit
    updatable: false
    attributes:
      - name: commit
        type: GitCommit
      - name: content
        type: File
  - name: Dir
    updatable: false
    attributes:
      - name: git_url
        type: string
      - name: html_url
        type: string
      - name: name
        type: string
      - name: path
        type: string
      - name: sha
        type: string
      - name: size
        type: int
      - name: type
        type: string
      - name: url
        type: string
    deprecated_attributes:
      - name: _links
        reason: todoAlpha What should we do with _links?
  - name: Permissions
    attributes:
      - name: admin
        type: bool
      - name: pull
        type: bool
      - name: push
        type: bool
  - name: Tag
    updatable: false
    attributes:
      - name: commit
        type: Commit
      - name: name
        type: string
      - name: tarball_url
        type: string
      - name: zipball_url
        type: string
attributes:
  - name: archive_url
    type: string
  - name: assignees_url
    type: string
  - name: blobs_url
    type: string
  - name: branches_url
    type: string
  - name: clone_url
    type: string
  - name: collaborators_url
    type: string
  - name: comments_url
    type: string
  - name: commits_url
    type: string
  - name: compare_url
    type: string
  - name: contents_url
    type: string
  - name: contributors_url
    type: string
  - name: created_at
    type: datetime
  - name: default_branch
    type: string
  - name: description
    type: string
  - name: downloads_url
    type: string
  - name: events_url
    type: string
  - name: fork
    type: bool
  - name: forks_count
    type: int
  - name: forks_url
    type: string
  - name: full_name
    type: string
  - name: git_commits_url
    type: string
  - name: git_refs_url
    type: string
  - name: git_tags_url
    type: string
  - name: git_url
    type: string
  - name: has_issues
    type: bool
  - name: has_wiki
    type: bool
  - name: homepage
    type: string
  - name: hooks_url
    type: string
  - name: html_url
    type: string
  - name: id
    type: int
  - name: issue_comment_url
    type: string
  - name: issue_events_url
    type: string
  - name: issues_url
    type: string
  - name: keys_url
    type: string
  - name: labels_url
    type: string
  - name: language
    type: string
  - name: languages_url
    type: string
  - name: merges_url
    type: string
  - name: milestones_url
    type: string
  - name: mirror_url
    type: string
  - name: name
    type: string
  - name: network_count
    type: int
  - name: notifications_url
    type: string
  - name: open_issues_count
    type: int
  - name: owner
    type:
      union: [User, Organization]
      key: type
      keys: [User, Organization]
  - name: parent
    type: Repository
  - name: permissions
    type: Repository.Permissions
  - name: private
    type: bool
  - name: pulls_url
    type: string
  - name: pushed_at
    type: datetime
  - name: releases_url
    type: string
  - name: size
    type: int
  - name: source
    type: Repository
  - name: ssh_url
    type: string
  - name: stargazers_count
    type: int
  - name: stargazers_url
    type: string
  - name: statuses_url
    type: string
  - name: subscribers_count
    type: int
  - name: subscribers_url
    type: string
  - name: subscription_url
    type: string
  - name: svn_url
    type: string
  - name: tags_url
    type: string
  - name: teams_url
    type: string
  - name: trees_url
    type: string
  - name: updated_at
    type: datetime
  - name: watchers_count
    type: int
deprecated_attributes:
  - name: forks
    reason: Replaced by forks_count
  - name: has_downloads
    reason: https://github.com/blog/1302-goodbye-uploads
  - name: master_branch
    reason: Replaced by default_branch
  - name: open_issues
    reason: Replaced by open_issues_count
  - name: organization
    reason: todoAlpha Remove? Or remember where we received this:)
  - name: watchers
    reason: Replaced by watchers_count
methods:
  - name: add_to_collaborators
    end_point: PUT /repos/:owner/:repo/collaborators/:username
    parameters:
      - name: username
        type:
          class: User
          attribute: login
    url_template: attribute collaborators_url
    url_template_arguments:
      - name: collaborator
        value: parameter username
    return_type: none
  - name: compare
    end_point: GET /repos/:owner/:repo/compare/:base...:head
    parameters:
      - name: base
        type:
          union:
            - class: Repository.Branch
              attribute: name
            - class: Commit
              attribute: sha
      - name: head
        type:
          union:
            - class: Repository.Branch
              attribute: name
            - class: Commit
              attribute: sha
    url_template: attribute compare_url
    url_template_arguments:
      - name: base
        value: parameter base
      - name: head
        value: parameter head
    return_type: Repository.ComparisonResult
  - name: create_file
    end_point: PUT /repos/:owner/:repo/contents/:path
    parameters:
      - name: path
        type: string
      - name: message
        type: string
      - name: content
        type: string
    optional_parameters:
      - name: branch
        type: string
      - name: author
        type: GitAuthor
      - name: committer
        type: GitAuthor
    unimplemented_parameters:
      - name: email
        reason: In author and committer
      - name: name
        reason: In author and committer
      - name: sha
        reason: Implemented in File.edit
    url_template: end_point
    url_template_arguments:
      - name: owner
        value: attribute owner.login
      - name: path
        value: parameter path
      - name: repo
        value: attribute name
    post_arguments:
      - name: author
        value: parameter author
      - name: branch
        value: parameter branch
      - name: committer
        value: parameter committer
      - name: content
        value: parameter content
      - name: message
        value: parameter message
    return_type: Repository.ContentCommit
  - name: create_git_blob
    end_point: POST /repos/:owner/:repo/git/blobs
    parameters:
      - name: content
        type: string
      - name: encoding
        type: string
    url_template: end_point
    url_template_arguments:
      - name: owner
        value: attribute owner.login
      - name: repo
        value: attribute name
    post_arguments:
      - name: content
        value: parameter content
      - name: encoding
        value: parameter encoding
    return_type: GitBlob
  - name: create_git_commit
    end_point: POST /repos/:owner/:repo/git/commits
    parameters:
      - name: message
        type: string
      - name: tree
        type:
          class: GitTree
          attribute: sha
      - name: parents
        type:
          container: list
          content:
            class: GitCommit
            attribute: sha
    optional_parameters:
      - name: committer
        type: GitAuthor
      - name: author
        type: GitAuthor
    unimplemented_parameters:
      - name: date
        reason: In author and committer
      - name: email
        reason: In author and committer
      - name: name
        reason: In author and committer
    url_template: attribute git_commits_url
    url_template_arguments:
      - name: owner
        value: attribute owner.login
      - name: repo
        value: attribute name
    post_arguments:
      - name: author
        value: parameter author
      - name: committer
        value: parameter committer
      - name: message
        value: parameter message
      - name: parents
        value: parameter parents
      - name: tree
        value: parameter tree
    return_type: GitCommit
  - name: create_git_ref
    end_point: POST /repos/:owner/:repo/git/refs
    parameters:
      - name: ref
        type: string
      - name: sha
        type: string
    url_template: attribute git_refs_url
    url_template_arguments:
      - name: owner
        value: attribute owner.login
      - name: repo
        value: attribute name
    post_arguments:
      - name: ref
        value: parameter ref
      - name: sha
        value: parameter sha
    return_type: GitRef
  - name: create_git_tag
    end_point: POST /repos/:owner/:repo/git/tags
    parameters:
      - name: tag
        type: string
      - name: message
        type: string
      - name: object
        type: string
      - name: type
        type: string
    optional_parameters:
      - name: tagger
        type: GitAuthor
    unimplemented_parameters:
      - name: date
        reason: In author and committer
      - name: email
        reason: In author and committer
      - name: name
        reason: In author and committer
    url_template: attribute git_tags_url
    url_template_arguments:
      - name: owner
        value: attribute owner.login
      - name: repo
        value: attribute name
    post_arguments:
      - name: message
        value: parameter message
      - name: object
        value: parameter object
      - name: tag
        value: parameter tag
      - name: tagger
        value: parameter tagger
      - name: type
        value: parameter type
    return_type: GitTag
  - name: create_git_tree
    end_point: POST /repos/:owner/:repo/git/trees
    parameters:
      - name: tree
        type:
          container: list
          content: dict
    unimplemented_parameters:
      - name: base_tree
        reason: Implemented in GitTree.create_modified_copy
      - name: content
        reason: In tree
      - name: mode
        reason: In tree
      - name: path
        reason: In tree
      - name: sha
        reason: In tree
      - name: type
        reason: In tree
    url_template: end_point
    url_template_arguments:
      - name: owner
        value: attribute owner.login
      - name: repo
        value: attribute name
    post_arguments:
      - name: tree
        value: parameter tree
    return_type: GitTree
  - name: create_issue
    end_point: POST /repos/:owner/:repo/issues
    parameters:
      - name: title
        type: string
    optional_parameters:
      - name: body
        type: string
      - name: assignee
        type:
          union:
            - class: User
              attribute: login
            - class: AuthenticatedUser
              attribute: login
      - name: milestone
        type:
          class: Milestone
          attribute: number
      - name: labels
        type:
          container: list
          content:
            class: Label
            attribute: name
    url_template: attribute issues_url
    post_arguments:
      - name: assignee
        value: parameter assignee
      - name: body
        value: parameter body
      - name: labels
        value: parameter labels
      - name: milestone
        value: parameter milestone
      - name: title
        value: parameter title
    return_type: Issue
  - name: create_key
    end_point: POST /repos/:owner/:repo/keys
    parameters:
      - name: title
        type: string
      - name: key
        type: string
    url_template: attribute keys_url
    post_arguments:
      - name: key
        value: parameter key
      - name: title
        value: parameter title
    return_type: PublicKey
  - name: create_label
    end_point: POST /repos/:owner/:repo/labels
    parameters:
      - name: name
        type: string
      - name: color
        type: string
    url_template: attribute labels_url
    post_arguments:
      - name: color
        value: parameter color
      - name: name
        value: parameter name
    return_type: Label
  - name: create_merge
    end_point: POST /repos/:owner/:repo/merges
    parameters:
      - name: base
        type:
          class: Repository.Branch
          attribute: name
      - name: head
        type:
          class: Repository.Branch
          attribute: name
    optional_parameters:
      - name: commit_message
        type: string
    url_template: attribute merges_url
    post_arguments:
      - name: base
        value: parameter base
      - name: commit_message
        value: parameter commit_message
      - name: head
        value: parameter head
    return_type: Commit
  - name: create_milestone
    end_point: POST /repos/:owner/:repo/milestones
    parameters:
      - name: title
        type: string
    optional_parameters:
      - name: state
        type:
          enum: [closed, open]
      - name: description
        type: string
      - name: due_on
        type: datetime
    url_template: attribute milestones_url
    post_arguments:
      - name: description
        value: parameter description
      - name: due_on
        value: parameter due_on
      - name: state
        value: parameter state
      - name: title
        value: parameter title
    return_type: Milestone
  - name: create_pull
    end_point: POST /repos/:owner/:repo/pulls
    parameters:
      - name: title
        type: string
      - name: head
        type: string
      - name: base
        type: string
    optional_parameters:
      - name: body
        type: string
    unimplemented_parameters:
      - name: issue
        reason: Implemented in Issue.create_pull
    url_template: attribute pulls_url
    post_arguments:
      - name: base
        value: parameter base
      - name: body
        value: parameter body
      - name: head
        value: parameter head
      - name: title
        value: parameter title
    return_type: PullRequest
  - name: create_release
    end_point: POST /repos/:owner/:repo/releases
    parameters:
      - name: tag_name
        type: string
    optional_parameters:
      - name: target_commitish
        type: string
      - name: name
        type: string
      - name: body
        type: string
      - name: draft
        type: bool
      - name: prerelease
        type: bool
    url_template: attribute releases_url
    post_arguments:
      - name: body
        value: parameter body
      - name: draft
        value: parameter draft
      - name: name
        value: parameter name
      - name: prerelease
        value: parameter prerelease
      - name: tag_name
        value: parameter tag_name
      - name: target_commitish
        value: parameter target_commitish
    return_type: Release
  - name: delete
    end_point: DELETE /repos/:owner/:repo
    url_template: attribute url
    return_type: none
  - name: edit
    end_point: PATCH /repos/:owner/:repo
    optional_parameters:
      - name: name
        type: string
      - name: description
        type:
          union: [string, Reset]
      - name: homepage
        type:
          union: [string, Reset]
      - name: private
        type: bool
      - name: has_issues
        type: bool
      - name: has_wiki
        type: bool
      - name: default_branch
        type:
          class: Repository.Branch
          attribute: name
    unimplemented_parameters:
      - name: has_downloads
        reason: https://github.com/blog/1302-goodbye-uploads
    url_template: attribute url
    post_arguments:
      - name: default_branch
        value: parameter default_branch
      - name: description
        value: parameter description
      - name: has_issues
        value: parameter has_issues
      - name: has_wiki
        value: parameter has_wiki
      - name: homepage
        value: parameter homepage
      - name: name
        value: parameter name
      - name: private
        value: parameter private
    effect: update
    return_type: none
  - name: get_assignees
    end_point: GET /repos/:owner/:repo/assignees
    url_template: attribute assignees_url
    return_type:
      container: PaginatedList
      content: User
  - name: get_branch
    end_point: GET /repos/:owner/:repo/branches/:branch
    parameters:
      - name: branch
        type: string
    url_template: attribute branches_url
    url_template_arguments:
      - name: branch
        value: parameter branch
    return_type: Repository.Branch
  - name: get_branches
    end_point: GET /repos/:owner/:repo/branches
    url_template: attribute branches_url
    return_type:
      container: PaginatedList
      content: Repository.Branch
  - name: get_collaborators
    end_point: GET /repos/:owner/:repo/collaborators
    url_template: attribute collaborators_url
    return_type:
      container: PaginatedList
      content: User
  - name: get_commit
    end_point: GET /repos/:owner/:repo/commits/:sha
    parameters:
      - name: sha
        type: string
    url_template: attribute commits_url
    url_template_arguments:
      - name: sha
        value: parameter sha
    return_type: Commit
  - name: get_commit_comment
    end_point: GET /repos/:owner/:repo/comments/:id
    parameters:
      - name: id
        type: int
    url_template: end_point
    url_template_arguments:
      - name: id
        value: parameter id
      - name: owner
        value: attribute owner.login
      - name: repo
        value: attribute name
    return_type: CommitComment
  - name: get_commit_comments
    end_point: GET /repos/:owner/:repo/comments
    url_template: end_point
    url_template_arguments:
      - name: owner
        value: attribute owner.login
      - name: repo
        value: attribute name
    return_type:
      container: PaginatedList
      content: CommitComment
  - name: get_commits
    end_point: GET /repos/:owner/:repo/commits
    optional_parameters:
      - name: sha
        type: string
      - name: path
        type: string
      - name: author
        type:
          union:
            - class: User
              attribute: login
            - class: AuthenticatedUser
              attribute: login
      - name: since
        type: datetime
      - name: until
        type: datetime
    url_template: attribute commits_url
    url_arguments:
      - name: author
        value: parameter author
      - name: path
        value: parameter path
      - name: sha
        value: parameter sha
      - name: since
        value: parameter since
      - name: until
        value: parameter until
    return_type:
      container: PaginatedList
      content: Commit
  - name: get_contents
    end_point: GET /repos/:owner/:repo/contents/:path
    parameters:
      - name: path
        type: string
    optional_parameters:
      - name: ref
        type: string
    url_template: end_point
    url_template_arguments:
      - name: owner
        value: attribute owner.login
      - name: path
        value: parameter path
      - name: repo
        value: attribute name
    url_arguments:
      - name: ref
        value: parameter ref
    return_type:
      union:
        - union: [File, Submodule, SymLink]
          key: type
          keys: [file, submodule, symlink]
        - container: list
          content:
            union: [File, Repository.Dir, Submodule, SymLink]
      converter: FirstMatch
  - name: get_contributors
    end_point: GET /repos/:owner/:repo/contributors
    optional_parameters:
      - name: anon
        type: bool
    url_template: attribute contributors_url
    url_arguments:
      - name: anon
        value: parameter anon
    return_type:
      container: PaginatedList
      content:
        union: [Contributor, Repository.AnonymousContributor]
        key: type
        keys: [User, Anonymous]
  - name: get_forks
    end_point: GET /repos/:owner/:repo/forks
    optional_parameters:
      - name: sort
        type:
          enum: [newest, oldest, stargazers]
    url_template: attribute forks_url
    url_arguments:
      - name: sort
        value: parameter sort
    return_type:
      container: PaginatedList
      content: Repository
  - name: get_git_blob
    end_point: GET /repos/:owner/:repo/git/blobs/:sha
    parameters:
      - name: sha
        type: string
    url_template: end_point
    url_template_arguments:
      - name: owner
        value: attribute owner.login
      - name: repo
        value: attribute name
      - name: sha
        value: parameter sha
    return_type: GitBlob
  - name: get_git_commit
    end_point: GET /repos/:owner/:repo/git/commits/:sha
    parameters:
      - name: sha
        type: string
    url_template: end_point
    url_template_arguments:
      - name: owner
        value: attribute owner.login
      - name: repo
        value: attribute name
      - name: sha
        value: parameter sha
    return_type: GitCommit
  - name: get_git_ref
    end_point: GET /repos/:owner/:repo/git/refs/:ref
    parameters:
      - name: ref
        type: string
    url_template: attribute git_refs_url
    url_template_arguments:
      - name: ref
        value: parameter ref
    return_type: GitRef
  - name: get_git_refs
    end_point: GET /repos/:owner/:repo/git/refs
    url_template: attribute git_refs_url
    return_type:
      container: PaginatedList
      content: GitRef
  - name: get_git_tag
    end_point: GET /repos/:owner/:repo/git/tags/:sha
    parameters:
      - name: sha
        type: string
    url_template: attribute git_tags_url
    url_template_arguments:
      - name: sha
        value: parameter sha
    return_type: GitTag
  - name: get_git_tree
    end_point: GET /repos/:owner/:repo/git/trees/:sha
    parameters:
      - name: sha
        type: string
    url_template: end_point
    url_template_arguments:
      - name: owner
        value: attribute owner.login
      - name: repo
        value: attribute name
      - name: sha
        value: parameter sha
    return_type: GitTree
  - name: get_issue
    end_point: GET /repos/:owner/:repo/issues/:number
    parameters:
      - name: number
        type: int
    url_template: attribute issues_url
    url_template_arguments:
      - name: number
        value: parameter number
    return_type: Issue
  - name: get_issue_comment
    end_point: GET /repos/:owner/:repo/issues/comments/:id
    parameters:
      - name: id
        type: int
    url_template: end_point
    url_template_arguments:
      - name: id
        value: parameter id
      - name: owner
        value: attribute owner.login
      - name: repo
        value: attribute name
    return_type: IssueComment
  - name: get_issue_comments
    end_point: GET /repos/:owner/:repo/issues/comments
    optional_parameters:
      - name: sort
        type:
          enum: [created, updated]
      - name: direction
        type:
          enum: [asc, desc]
      - name: since
        type: datetime
    url_template: end_point
    url_template_arguments:
      - name: owner
        value: attribute owner.login
      - name: repo
        value: attribute name
    url_arguments:
      - name: direction
        value: parameter direction
      - name: since
        value: parameter since
      - name: sort
        value: parameter sort
    return_type:
      container: PaginatedList
      content: IssueComment
  - name: get_issues
    end_point: GET /repos/:owner/:repo/issues
    optional_parameters:
      - name: milestone
        type:
          class: Milestone
          attribute: number
      - name: state
        type:
          enum: [all, closed, open]
      - name: assignee
        type:
          union:
            - class: User
              attribute: login
            - class: AuthenticatedUser
              attribute: login
      - name: creator
        type:
          union:
            - class: User
              attribute: login
            - class: AuthenticatedUser
              attribute: login
      - name: mentioned
        type:
          union:
            - class: User
              attribute: login
            - class: AuthenticatedUser
              attribute: login
      - name: labels
        type:
          container: list
          content:
            class: Label
            attribute: name
      - name: sort
        type:
          enum: [comments, created, updated]
      - name: direction
        type:
          enum: [asc, desc]
      - name: since
        type: datetime
    url_template: attribute issues_url
    url_arguments:
      - name: assignee
        value: parameter assignee
      - name: creator
        value: parameter creator
      - name: direction
        value: parameter direction
      - name: labels
        value: parameter labels
      - name: mentioned
        value: parameter mentioned
      - name: milestone
        value: parameter milestone
      - name: since
        value: parameter since
      - name: sort
        value: parameter sort
      - name: state
        value: parameter state
    return_type:
      container: PaginatedList
      content: Issue
  - name: get_key
    end_point: GET /repos/:owner/:repo/keys/:id
    parameters:
      - name: id
        type: int
    url_template: attribute keys_url
    url_template_arguments:
      - name: key_id
        value: parameter id
    return_type: PublicKey
  - name: get_keys
    end_point: GET /repos/:owner/:repo/keys
    url_template: attribute keys_url
    return_type:
      container: list
      content: PublicKey
  - name: get_label
    end_point: GET /repos/:owner/:repo/labels/:name
    parameters:
      - name: name
        type: string
    url_template: attribute labels_url
    url_template_arguments:
      - name: name
        value: parameter name
    return_type: Label
  - name: get_labels
    end_point: GET /repos/:owner/:repo/labels
    url_template: attribute labels_url
    return_type:
      container: list
      content: Label
  - name: get_languages
    end_point: GET /repos/:owner/:repo/languages
    url_template: attribute languages_url
    return_type:
      container: dict
      key: string
      value: int
  - name: get_latest_pages_build
    end_point: GET /repos/:owner/:repo/pages/builds/latest
    url_template: end_point
    url_template_arguments:
      - name: owner
        value: attribute owner.login
      - name: repo
        value: attribute name
    return_type: PagesBuild
  - name: get_milestone
    end_point: GET /repos/:owner/:repo/milestones/:number
    parameters:
      - name: number
        type: int
    url_template: attribute milestones_url
    url_template_arguments:
      - name: number
        value: parameter number
    return_type: Milestone
  - name: get_milestones
    end_point: GET /repos/:owner/:repo/milestones
    optional_parameters:
      - name: state
        type:
          enum: [all, closed, open]
      - name: sort
        type:
          enum: [completion, due_date]
      - name: direction
        type:
          enum: [asc, desc]
    url_template: attribute milestones_url
    url_arguments:
      - name: direction
        value: parameter direction
      - name: sort
        value: parameter sort
      - name: state
        value: parameter state
    return_type:
      container: PaginatedList
      content: Milestone
  - name: get_pages
    end_point: GET /repos/:owner/:repo/pages
    url_template: end_point
    url_template_arguments:
      - name: owner
        value: attribute owner.login
      - name: repo
        value: attribute name
    return_type: PagesInformation
  - name: get_pages_builds
    end_point: GET /repos/:owner/:repo/pages/builds
    url_template: end_point
    url_template_arguments:
      - name: owner
        value: attribute owner.login
      - name: repo
        value: attribute name
    return_type:
      container: PaginatedList
      content: PagesBuild
  - name: get_pull
    end_point: GET /repos/:owner/:repo/pulls/:number
    parameters:
      - name: number
        type: int
    url_template: attribute pulls_url
    url_template_arguments:
      - name: number
        value: parameter number
    return_type: PullRequest
  - name: get_pull_comment
    end_point: GET /repos/:owner/:repo/pulls/comments/:number
    parameters:
      - name: number
        type: int
    url_template: end_point
    url_template_arguments:
      - name: number
        value: parameter number
      - name: owner
        value: attribute owner.login
      - name: repo
        value: attribute name
    return_type: PullComment
  - name: get_pull_comments
    end_point: GET /repos/:owner/:repo/pulls/comments
    optional_parameters:
      - name: sort
        type:
          enum: [created, updated]
      - name: direction
        type:
          enum: [asc, desc]
      - name: since
        type: datetime
    url_template: end_point
    url_template_arguments:
      - name: owner
        value: attribute owner.login
      - name: repo
        value: attribute name
    url_arguments:
      - name: direction
        value: parameter direction
      - name: since
        value: parameter since
      - name: sort
        value: parameter sort
    return_type:
      container: PaginatedList
      content: PullComment
  - name: get_pulls
    end_point: GET /repos/:owner/:repo/pulls
    optional_parameters:
      - name: state
        type:
          enum: [all, closed, open]
      - name: head
        type: string
      - name: base
        type: string
      - name: sort
        type:
          enum: [created, long-running, popularity, updated]
      - name: direction
        type:
          enum: [asc, desc]
    url_template: attribute pulls_url
    url_arguments:
      - name: base
        value: parameter base
      - name: direction
        value: parameter direction
      - name: head
        value: parameter head
      - name: sort
        value: parameter sort
      - name: state
        value: parameter state
    return_type:
      container: PaginatedList
      content: PullRequest
  - name: get_readme
    end_point: GET /repos/:owner/:repo/readme
    optional_parameters:
      - name: ref
        type: string
    url_template: end_point
    url_template_arguments:
      - name: owner
        value: attribute owner.login
      - name: repo
        value: attribute name
    url_arguments:
      - name: ref
        value: parameter ref
    return_type: File
  - name: get_release
    end_point: GET /repos/:owner/:repo/releases/:id
    parameters:
      - name: id
        type: int
    url_template: attribute releases_url
    url_template_arguments:
      - name: id
        value: parameter id
    return_type: Release
  - name: get_release_asset
    end_point: GET /repos/:owner/:repo/releases/assets/:id
    parameters:
      - name: id
        type: int
    url_template: end_point
    url_template_arguments:
      - name: id
        value: parameter id
      - name: owner
        value: attribute owner.login
      - name: repo
        value: attribute name
    return_type: Asset
  - name: get_releases
    end_point: GET /repos/:owner/:repo/releases
    url_template: attribute releases_url
    return_type:
      container: PaginatedList
      content: Release
  - name: get_stargazers
    end_point: GET /repos/:owner/:repo/stargazers
    url_template: attribute stargazers_url
    return_type:
      container: PaginatedList
      content: User
  - name: get_subscribers
    end_point: GET /repos/:owner/:repo/subscribers
    url_template: attribute subscribers_url
    return_type:
      container: PaginatedList
      content: User
  - name: get_tags
    end_point: GET /repos/:owner/:repo/tags
    url_template: attribute tags_url
    return_type:
      container: PaginatedList
      content: Repository.Tag
  - name: get_teams
    end_point: GET /repos/:owner/:repo/teams
    url_template: attribute teams_url
    return_type:
      container: PaginatedList
      content: Team
  - name: has_in_assignees
    end_point: GET /repos/:owner/:repo/assignees/:assignee
    parameters:
      - name: assignee
        type:
          union:
            - class: User
              attribute: login
            - class: AuthenticatedUser
              attribute: login
    url_template: attribute assignees_url
    url_template_arguments:
      - name: user
        value: parameter assignee
    return_from: status
    return_type: bool
  - name: has_in_collaborators
    end_point: GET /repos/:owner/:repo/collaborators/:username
    parameters:
      - name: username
        type:
          union:
            - class: User
              attribute: login
            - class: AuthenticatedUser
              attribute: login
    url_template: attribute collaborators_url
    url_template_arguments:
      - name: collaborator
        value: parameter username
    return_from: status
    return_type: bool
  - name: remove_from_collaborators
    end_point: DELETE /repos/:owner/:repo/collaborators/:username
    parameters:
      - name: username
        type:
          union:
            - class: User
              attribute: login
            - class: AuthenticatedUser
              attribute: login
    url_template: attribute collaborators_url
    url_template_arguments:
      - name: collaborator
        value: parameter username
    return_type: none
