structures:
  - name: Email
    updatable: false
    attributes:
      - name: email
        type: string
      - name: primary
        type: bool
      - name: verified
        type: bool
attributes:
  - name: avatar_url
    type: string
  - name: blog
    type: string
  - name: collaborators
    type: int
  - name: company
    type: string
  - name: created_at
    type: datetime
  - name: disk_usage
    type: int
  - name: email
    type: string
  - name: events_url
    type: string
  - name: followers
    type: int
  - name: followers_url
    type: string
  - name: following
    type: int
  - name: following_url
    type: string
  - name: gists_url
    type: string
  - name: gravatar_id
    type: string
  - name: hireable
    type: bool
  - name: html_url
    type: string
  - name: id
    type: int
  - name: location
    type: string
  - name: login
    type: string
  - name: name
    type: string
  - name: organizations_url
    type: string
  - name: owned_private_repos
    type: int
  - name: plan
    type: User.Plan
  - name: private_gists
    type: int
  - name: public_gists
    type: int
  - name: public_repos
    type: int
  - name: received_events_url
    type: string
  - name: repos_url
    type: string
  - name: site_admin
    type: bool
  - name: starred_url
    type: string
  - name: subscriptions_url
    type: string
  - name: suspended_at
    type: datetime
  - name: total_private_repos
    type: int
  - name: type
    type: string
  - name: updated_at
    type: datetime
deprecated_attributes:
  - name: bio
    reason: No more bio in https://github.com/settings/profile
methods:
  - name: add_to_emails
    end_point: POST /user/emails
    variable_parameter:
      name: email
      type: string
    url_template: end_point
    post_arguments:
      - name: email
        value: parameter email
    return_type: none
  - name: add_to_following
    end_point: PUT /user/following/:username
    parameters:
      - name: username
        type:
          class: User
          attribute: login
    url_template: end_point
    url_template_arguments:
      - name: username
        value: parameter username
    return_type: none
  - name: add_to_starred
    end_point: PUT /user/starred/:owner/:repo
    parameters:
      - name: repo
        type:
          class: Repository
          attribute: full_name
    url_template: end_point
    url_template_arguments:
      - name: owner
        value: ownerFromRepo repo
      - name: repo
        value: nameFromRepo repo
    return_type: none
  - name: add_to_starred_gists
    end_point: PUT /gists/:id/star
    parameters:
      - name: gist
        type:
          class: Gist
          attribute: id
    url_template: end_point
    url_template_arguments:
      - name: id
        value: parameter gist
    return_type: none
  - name: create_fork
    end_point: POST /repos/:owner/:repo/forks
    parameters:
      - name: repo
        type:
          class: Repository
          attribute: full_name
    unimplemented_parameters:
      - name: organization
        reason: Implemented in Organization.create_fork
    url_template: end_point
    url_template_arguments:
      - name: owner
        value: ownerFromRepo repo
      - name: repo
        value: nameFromRepo repo
    return_type: Repository
  - name: create_gist
    end_point: POST /gists
    parameters:
      - name: files
        type: bool
    optional_parameters:
      - name: description
        type: string
      - name: public
        type: bool
    url_template: end_point
    post_arguments:
      - name: description
        value: parameter description
      - name: files
        value: parameter files
      - name: public
        value: parameter public
    return_type: Gist
  - name: create_gist_fork
    end_point: POST /gists/:id/forks
    parameters:
      - name: gist
        type:
          class: Gist
          attribute: id
    url_template: end_point
    url_template_arguments:
      - name: id
        value: parameter gist
    return_type: Gist
  - name: create_key
    end_point: POST /user/keys
    parameters:
      - name: title
        type: string
      - name: key
        type: string
    url_template: end_point
    post_arguments:
      - name: key
        value: parameter key
      - name: title
        value: parameter title
    return_type: PublicKey
  - name: create_repo
    end_point: POST /user/repos
    parameters:
      - name: name
        type: string
    optional_parameters:
      - name: description
        type: string
      - name: homepage
        type: string
      - name: private
        type: bool
      - name: has_issues
        type: bool
      - name: has_wiki
        type: bool
      - name: auto_init
        type: bool
      - name: gitignore_template
        type:
          class: Github.GitIgnoreTemplate
          attribute: name
      - name: license_template
        type: string
    unimplemented_parameters:
      - name: has_downloads
        reason: https://github.com/blog/1302-goodbye-uploads
      - name: team_id
        reason: Implemented in Organization.create_repo
    url_template: end_point
    post_arguments:
      - name: auto_init
        value: parameter auto_init
      - name: description
        value: parameter description
      - name: gitignore_template
        value: parameter gitignore_template
      - name: has_issues
        value: parameter has_issues
      - name: has_wiki
        value: parameter has_wiki
      - name: homepage
        value: parameter homepage
      - name: license_template
        value: parameter license_template
      - name: name
        value: parameter name
      - name: private
        value: parameter private
    return_type: Repository
  - name: create_subscription
    end_point: PUT /repos/:owner/:repo/subscription
    parameters:
      - name: repo
        type:
          class: Repository
          attribute: full_name
      - name: subscribed
        type: bool
      - name: ignored
        type: bool
    url_template: end_point
    url_template_arguments:
      - name: owner
        value: ownerFromRepo repo
      - name: repo
        value: nameFromRepo repo
    post_arguments:
      - name: ignored
        value: parameter ignored
      - name: subscribed
        value: parameter subscribed
    return_type: Subscription
  - name: edit
    end_point: PATCH /user
    optional_parameters:
      - name: name
        type:
          union: [string, Reset]
      - name: email
        type:
          union: [string, Reset]
      - name: blog
        type:
          union: [string, Reset]
      - name: company
        type:
          union: [string, Reset]
      - name: location
        type:
          union: [string, Reset]
      - name: hireable
        type:
          union: [bool, Reset]
    unimplemented_parameters:
      - name: bio
        reason: No more bio in https://github.com/settings/profile
    url_template: end_point
    post_arguments:
      - name: blog
        value: parameter blog
      - name: company
        value: parameter company
      - name: email
        value: parameter email
      - name: hireable
        value: parameter hireable
      - name: location
        value: parameter location
      - name: name
        value: parameter name
    effect: update
    return_type: none
  - name: get_emails
    end_point: GET /user/emails
    url_template: end_point
    return_type:
      container: list
      content: AuthenticatedUser.Email
  - name: get_followers
    end_point: GET /user/followers
    optional_parameters:
      - name: per_page
        type: int
    url_template: end_point
    url_arguments:
      - name: per_page
        value: parameter per_page
    return_type:
      container: PaginatedList
      content: User
  - name: get_following
    end_point: GET /user/following
    optional_parameters:
      - name: per_page
        type: int
    url_template: end_point
    url_arguments:
      - name: per_page
        value: parameter per_page
    return_type:
      container: PaginatedList
      content: User
  - name: get_gists
    end_point: GET /gists
    optional_parameters:
      - name: since
        type: datetime
      - name: per_page
        type: int
    url_template: end_point
    url_arguments:
      - name: per_page
        value: parameter per_page
      - name: since
        value: parameter since
    return_type:
      container: PaginatedList
      content: Gist
  - name: get_issues
    end_point: GET /issues
    optional_parameters:
      - name: filter
        type:
          enum: [all, assigned, created, mentioned, subscribed]
      - name: state
        type:
          enum: [all, closed, open]
      - name: labels
        type:
          container: list
          content:
            class: Label
            attribute: name
      - name: sort
        type:
          enum: [comments, created, updated]
      - name: direction
        type:
          enum: [asc, desc]
      - name: since
        type: datetime
      - name: per_page
        type: int
    url_template: end_point
    url_arguments:
      - name: direction
        value: parameter direction
      - name: filter
        value: parameter filter
      - name: labels
        value: parameter labels
      - name: per_page
        value: parameter per_page
      - name: since
        value: parameter since
      - name: sort
        value: parameter sort
      - name: state
        value: parameter state
    return_type:
      container: PaginatedList
      content: Issue
  - name: get_key
    end_point: GET /user/keys/:id
    parameters:
      - name: id
        type: int
    url_template: end_point
    url_template_arguments:
      - name: id
        value: parameter id
    return_type: PublicKey
  - name: get_keys
    end_point: GET /user/keys
    url_template: end_point
    return_type:
      container: list
      content: PublicKey
  - name: get_orgs
    end_point: GET /user/orgs
    optional_parameters:
      - name: per_page
        type: int
    url_template: end_point
    url_arguments:
      - name: per_page
        value: parameter per_page
    return_type:
      container: PaginatedList
      content: Organization
  - name: get_repo
    end_point: GET /repos/:owner/:repo
    parameters:
      - name: repo
        type: string
    url_template: end_point
    url_template_arguments:
      - name: owner
        value: attribute login
      - name: repo
        value: parameter repo
    return_type: Repository
  - name: get_repos
    end_point: GET /user/repos
    optional_parameters:
      - name: type
        type:
          enum: [all, member, owner, private, public]
      - name: sort
        type:
          enum: [created, full_name, pushed, updated]
      - name: direction
        type:
          enum: [asc, desc]
      - name: per_page
        type: int
    url_template: end_point
    url_arguments:
      - name: direction
        value: parameter direction
      - name: per_page
        value: parameter per_page
      - name: sort
        value: parameter sort
      - name: type
        value: parameter type
    return_type:
      container: PaginatedList
      content: Repository
  - name: get_starred
    end_point: GET /user/starred
    optional_parameters:
      - name: sort
        type:
          enum: [created, updated]
      - name: direction
        type:
          enum: [asc, desc]
      - name: per_page
        type: int
    url_template: end_point
    url_arguments:
      - name: direction
        value: parameter direction
      - name: per_page
        value: parameter per_page
      - name: sort
        value: parameter sort
    return_type:
      container: PaginatedList
      content: Repository
  - name: get_starred_gists
    end_point: GET /gists/starred
    optional_parameters:
      - name: since
        type: datetime
      - name: per_page
        type: int
    url_template: end_point
    url_arguments:
      - name: per_page
        value: parameter per_page
      - name: since
        value: parameter since
    return_type:
      container: PaginatedList
      content: Gist
  - name: get_subscription
    end_point: GET /repos/:owner/:repo/subscription
    parameters:
      - name: repo
        type:
          class: Repository
          attribute: full_name
    url_template: end_point
    url_template_arguments:
      - name: owner
        value: ownerFromRepo repo
      - name: repo
        value: nameFromRepo repo
    return_type: Subscription
  - name: get_subscriptions
    end_point: GET /user/subscriptions
    optional_parameters:
      - name: per_page
        type: int
    url_template: end_point
    url_arguments:
      - name: per_page
        value: parameter per_page
    return_type:
      container: PaginatedList
      content: Repository
  - name: get_teams
    end_point: GET /user/teams
    optional_parameters:
      - name: per_page
        type: int
    url_template: end_point
    url_arguments:
      - name: per_page
        value: parameter per_page
    return_type:
      container: PaginatedList
      content: Team
  - name: get_user_issues
    end_point: GET /user/issues
    optional_parameters:
      - name: filter
        type:
          enum: [all, assigned, created, mentioned, subscribed]
      - name: state
        type:
          enum: [all, closed, open]
      - name: labels
        type:
          container: list
          content:
            class: Label
            attribute: name
      - name: sort
        type:
          enum: [comments, created, updated]
      - name: direction
        type:
          enum: [asc, desc]
      - name: since
        type: datetime
      - name: per_page
        type: int
    url_template: end_point
    url_arguments:
      - name: direction
        value: parameter direction
      - name: filter
        value: parameter filter
      - name: labels
        value: parameter labels
      - name: per_page
        value: parameter per_page
      - name: since
        value: parameter since
      - name: sort
        value: parameter sort
      - name: state
        value: parameter state
    return_type:
      container: PaginatedList
      content: Issue
  - name: has_in_following
    end_point: GET /user/following/:username
    parameters:
      - name: username
        type:
          class: User
          attribute: login
    url_template: end_point
    url_template_arguments:
      - name: username
        value: parameter username
    return_from: status
    return_type: bool
  - name: has_in_starred
    end_point: GET /user/starred/:owner/:repo
    parameters:
      - name: repo
        type:
          class: Repository
          attribute: full_name
    url_template: end_point
    url_template_arguments:
      - name: owner
        value: ownerFromRepo repo
      - name: repo
        value: nameFromRepo repo
    return_from: status
    return_type: bool
  - name: has_in_starred_gists
    end_point: GET /gists/:id/star
    parameters:
      - name: gist
        type:
          class: Gist
          attribute: id
    url_template: end_point
    url_template_arguments:
      - name: id
        value: parameter gist
    return_from: status
    return_type: bool
  - name: remove_from_emails
    end_point: DELETE /user/emails
    variable_parameter:
      name: email
      type: string
    url_template: end_point
    post_arguments:
      - name: email
        value: parameter email
    return_type: none
  - name: remove_from_following
    end_point: DELETE /user/following/:username
    parameters:
      - name: username
        type:
          class: User
          attribute: login
    url_template: end_point
    url_template_arguments:
      - name: username
        value: parameter username
    return_type: none
  - name: remove_from_starred
    end_point: DELETE /user/starred/:owner/:repo
    parameters:
      - name: repo
        type:
          class: Repository
          attribute: full_name
    url_template: end_point
    url_template_arguments:
      - name: owner
        value: ownerFromRepo repo
      - name: repo
        value: nameFromRepo repo
    return_type: none
  - name: remove_from_starred_gists
    end_point: DELETE /gists/:id/star
    parameters:
      - name: gist
        type:
          class: Gist
          attribute: id
    url_template: end_point
    url_template_arguments:
      - name: id
        value: parameter gist
    return_type: none
