structures:
  - name: GitIgnoreTemplate
    updatable: false
    attributes:
      - name: name
        type: string
      - name: source
        type: string
  - name: HookDescription
    updatable: false
    attributes:
      - name: events
        type:
          container: list
          content: string
      - name: name
        type: string
      - name: schema
        type:
          container: list
          content:
            container: list
            content: string
      - name: supported_events
        type:
          container: list
          content: string
      - name: title
        type: string
  - name: Meta
    updatable: false
    attributes:
      - name: git
        type:
          container: list
          content: string
      - name: hooks
        type:
          container: list
          content: string
      - name: verifiable_password_authentication
        type: bool
  - name: RateLimit
    updatable: false
    attributes:
      - name: resources
        type: Github.Resources
    deprecated_attributes:
      - name: rate
        reason: https://developer.github.com/v3/rate_limit/#deprecation-notice
  - name: RateLimits
    attributes:
      - name: limit
        type: int
      - name: remaining
        type: int
      - name: reset
        type: datetime
  - name: Resources
    updatable: false
    attributes:
      - name: core
        type: Github.RateLimits
      - name: search
        type: Github.RateLimits
methods:
  - name: create_anonymous_gist
    end_point: POST /gists
    parameters:
      - name: files
        type: bool
    optional_parameters:
      - name: description
        type: string
      - name: public
        type: bool
    url_template: end_point
    post_arguments:
      - name: description
        value: parameter description
      - name: files
        value: parameter files
      - name: public
        value: parameter public
    return_type: Gist
  - name: get_authenticated_user
    end_point: GET /user
    url_template: end_point
    return_type: AuthenticatedUser
  - name: get_emojis
    end_point: GET /emojis
    url_template: end_point
    return_type:
      container: dict
      key: string
      value: string
  - name: get_gist
    end_point: GET /gists/:id
    parameters:
      - name: id
        type: string
    url_template: end_point
    url_template_arguments:
      - name: id
        value: parameter id
    return_type: Gist
  - name: get_gitignore_template
    end_point: GET /gitignore/templates/:name
    parameters:
      - name: name
        type: string
    url_template: end_point
    url_template_arguments:
      - name: name
        value: parameter name
    return_type: Github.GitIgnoreTemplate
  - name: get_gitignore_templates
    end_point: GET /gitignore/templates
    url_template: end_point
    return_type:
      container: list
      content: string
  - name: get_hook
    end_point: GET /hooks/:name
    parameters:
      - name: name
        type: string
    url_template: end_point
    url_template_arguments:
      - name: name
        value: parameter name
    return_type: Github.HookDescription
  - name: get_hooks
    end_point: GET /hooks
    url_template: end_point
    return_type:
      container: list
      content: Github.HookDescription
  - name: get_meta
    end_point: GET /meta
    url_template: end_point
    return_type: Github.Meta
  - name: get_org
    end_point: GET /orgs/:org
    parameters:
      - name: org
        type: string
    url_template: end_point
    url_template_arguments:
      - name: org
        value: parameter org
    return_type: Organization
  - name: get_public_gists
    end_point: GET /gists/public
    optional_parameters:
      - name: since
        type: datetime
    url_template: end_point
    url_arguments:
      - name: since
        value: parameter since
    return_type:
      container: PaginatedList
      content: Gist
  - name: get_rate_limit
    end_point: GET /rate_limit
    url_template: end_point
    return_type: Github.RateLimit
  - name: get_repo
    end_point: GET /repos/:owner/:repo
    parameters:
      - name: repo
        type:
          union: ["(string, string)", string]
    url_template: end_point
    url_template_arguments:
      - name: owner
        value: ownerFromRepo repo
      - name: repo
        value: nameFromRepo repo
    return_type: Repository
  - name: get_repos
    end_point: GET /repositories
    optional_parameters:
      - name: since
        type:
          class: Repository
          attribute: id
    url_template: end_point
    url_arguments:
      - name: since
        value: parameter since
    return_type:
      container: PaginatedListWithoutPerPage
      content: Repository
  - name: get_team
    end_point: GET /teams/:id
    parameters:
      - name: id
        type: int
    url_template: end_point
    url_template_arguments:
      - name: id
        value: parameter id
    return_type: Team
  - name: get_user
    end_point: GET /users/:username
    parameters:
      - name: username
        type: string
    url_template: end_point
    url_template_arguments:
      - name: username
        value: parameter username
    return_type: User
  - name: get_users
    end_point: GET /users
    optional_parameters:
      - name: since
        type:
          class: User
          attribute: id
    url_template: end_point
    url_arguments:
      - name: since
        value: parameter since
    return_type:
      container: PaginatedListWithoutPerPage
      content:
        union: [User, Organization]
        key: type
        keys: [User, Organization]
