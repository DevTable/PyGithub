attributes:
  - name: avatar_url
    type: string
  - name: billing_email
    type: string
  - name: blog
    type: string
  - name: collaborators
    type: int
  - name: company
    type: string
  - name: created_at
    type: datetime
  - name: disk_usage
    type: int
  - name: email
    type: string
  - name: events_url
    type: string
  - name: html_url
    type: string
  - name: id
    type: int
  - name: location
    type: string
  - name: login
    type: string
  - name: members_url
    type: string
  - name: name
    type: string
  - name: owned_private_repos
    type: int
  - name: plan
    type: User.Plan
  - name: private_gists
    type: int
  - name: public_gists
    type: int
  - name: public_members_url
    type: string
  - name: public_repos
    type: int
  - name: repos_url
    type: string
  - name: total_private_repos
    type: int
  - name: type
    type: string
  - name: updated_at
    type: datetime
deprecated_attributes:
  - name: followers
    reason: No following for orgs https://github.com/isaacs/github/issues/50
  - name: followers_url
    reason: No following for orgs
  - name: following
    reason: No following for orgs
  - name: following_url
    reason: No following for orgs
  - name: gists_url
    reason: No gists for orgs
  - name: gravatar_id
    reason: todoAlpha Remove?
  - name: organizations_url
    reason: Doesn't make sense
  - name: received_events_url
    reason: Doesn't make sense
  - name: site_admin
    reason: Doesn't make sense
  - name: starred_url
    reason: No starring for orgs
  - name: subscriptions_url
    reason: No subscriptions for orgs
methods:
  - name: add_to_public_members
    end_point: PUT /orgs/:org/public_members/:username
    parameters:
      - name: username
        type:
          class: AuthenticatedUser
          attribute: login
    url_template: attribute public_members_url
    url_template_arguments:
      - name: member
        value: parameter username
    return_type: none
  - name: create_fork
    end_point: POST /repos/:owner/:repo/forks
    parameters:
      - name: repo
        type:
          class: Repository
          attribute: full_name
    unimplemented_parameters:
      - name: organization
        reason: Taken from attribute login
    url_template: end_point
    url_template_arguments:
      - name: owner
        value: ownerFromRepo repo
      - name: repo
        value: nameFromRepo repo
    post_arguments:
      - name: organization
        value: attribute login
    return_type: Repository
  - name: create_repo
    end_point: POST /orgs/:org/repos
    parameters:
      - name: name
        type: string
    optional_parameters:
      - name: description
        type: string
      - name: homepage
        type: string
      - name: private
        type: bool
      - name: has_issues
        type: bool
      - name: has_wiki
        type: bool
      - name: team_id
        type:
          class: Team
          attribute: id
      - name: auto_init
        type: bool
      - name: gitignore_template
        type:
          class: Github.GitIgnoreTemplate
          attribute: name
      - name: license_template
        type: string
    unimplemented_parameters:
      - name: has_downloads
        reason: https://github.com/blog/1302-goodbye-uploads
    url_template: attribute repos_url
    post_arguments:
      - name: auto_init
        value: parameter auto_init
      - name: description
        value: parameter description
      - name: gitignore_template
        value: parameter gitignore_template
      - name: has_issues
        value: parameter has_issues
      - name: has_wiki
        value: parameter has_wiki
      - name: homepage
        value: parameter homepage
      - name: license_template
        value: parameter license_template
      - name: name
        value: parameter name
      - name: private
        value: parameter private
      - name: team_id
        value: parameter team_id
    return_type: Repository
  - name: create_team
    end_point: POST /orgs/:org/teams
    parameters:
      - name: name
        type: string
    optional_parameters:
      - name: repo_names
        type:
          container: list
          content:
            class: Repository
            attribute: full_name
      - name: permission
        type:
          enum: [admin, pull, push]
    url_template: end_point
    url_template_arguments:
      - name: org
        value: attribute login
    post_arguments:
      - name: name
        value: parameter name
      - name: permission
        value: parameter permission
      - name: repo_names
        value: parameter repo_names
    return_type: Team
  - name: edit
    end_point: PATCH /orgs/:org
    optional_parameters:
      - name: billing_email
        type: string
      - name: blog
        type:
          union: [string, Reset]
      - name: company
        type:
          union: [string, Reset]
      - name: email
        type:
          union: [string, Reset]
      - name: location
        type:
          union: [string, Reset]
      - name: name
        type:
          union: [string, Reset]
    url_template: attribute url
    post_arguments:
      - name: billing_email
        value: parameter billing_email
      - name: blog
        value: parameter blog
      - name: company
        value: parameter company
      - name: email
        value: parameter email
      - name: location
        value: parameter location
      - name: name
        value: parameter name
    effect: update
    return_type: none
  - name: get_issues
    end_point: GET /orgs/:org/issues
    optional_parameters:
      - name: filter
        type:
          enum: [all, assigned, created, mentioned, subscribed]
      - name: state
        type:
          enum: [all, closed, open]
      - name: labels
        type:
          container: list
          content:
            class: Label
            attribute: name
      - name: sort
        type:
          enum: [comments, created, updated]
      - name: direction
        type:
          enum: [asc, desc]
      - name: since
        type: datetime
      - name: per_page
        type: int
    url_template: end_point
    url_template_arguments:
      - name: org
        value: attribute login
    url_arguments:
      - name: direction
        value: parameter direction
      - name: filter
        value: parameter filter
      - name: labels
        value: parameter labels
      - name: per_page
        value: parameter per_page
      - name: since
        value: parameter since
      - name: sort
        value: parameter sort
      - name: state
        value: parameter state
    return_type:
      container: PaginatedList
      content: Issue
  - name: get_members
    end_point: GET /orgs/:org/members
    optional_parameters:
      - name: filter
        type:
          enum: [2fa_disabled, all]
      - name: per_page
        type: int
    url_template: attribute members_url
    url_arguments:
      - name: filter
        value: parameter filter
      - name: per_page
        value: parameter per_page
    return_type:
      container: PaginatedList
      content: User
  - name: get_public_members
    end_point: GET /orgs/:org/public_members
    optional_parameters:
      - name: per_page
        type: int
    url_template: attribute public_members_url
    url_arguments:
      - name: per_page
        value: parameter per_page
    return_type:
      container: PaginatedList
      content: User
  - name: get_repo
    end_point: GET /repos/:owner/:repo
    parameters:
      - name: repo
        type: string
    url_template: end_point
    url_template_arguments:
      - name: owner
        value: attribute login
      - name: repo
        value: parameter repo
    return_type: Repository
  - name: get_repos
    end_point: GET /orgs/:org/repos
    optional_parameters:
      - name: type
        type:
          enum: [all, forks, member, private, public, sources]
      - name: per_page
        type: int
    url_template: attribute repos_url
    url_arguments:
      - name: per_page
        value: parameter per_page
      - name: type
        value: parameter type
    return_type:
      container: PaginatedList
      content: Repository
  - name: get_teams
    end_point: GET /orgs/:org/teams
    optional_parameters:
      - name: per_page
        type: int
    url_template: end_point
    url_template_arguments:
      - name: org
        value: attribute login
    url_arguments:
      - name: per_page
        value: parameter per_page
    return_type:
      container: PaginatedList
      content: Team
  - name: has_in_members
    end_point: GET /orgs/:org/members/:username
    parameters:
      - name: username
        type:
          union:
            - class: User
              attribute: login
            - class: AuthenticatedUser
              attribute: login
    url_template: attribute members_url
    url_template_arguments:
      - name: member
        value: parameter username
    return_from: status
    return_type: bool
  - name: has_in_public_members
    end_point: GET /orgs/:org/public_members/:username
    parameters:
      - name: username
        type:
          union:
            - class: User
              attribute: login
            - class: AuthenticatedUser
              attribute: login
    url_template: attribute public_members_url
    url_template_arguments:
      - name: member
        value: parameter username
    return_from: status
    return_type: bool
  - name: remove_from_members
    end_point: DELETE /orgs/:org/members/:username
    parameters:
      - name: username
        type:
          union:
            - class: User
              attribute: login
            - class: AuthenticatedUser
              attribute: login
    url_template: attribute members_url
    url_template_arguments:
      - name: member
        value: parameter username
    return_type: none
  - name: remove_from_public_members
    end_point: DELETE /orgs/:org/public_members/:username
    parameters:
      - name: username
        type:
          union:
            - class: User
              attribute: login
            - class: AuthenticatedUser
              attribute: login
    url_template: attribute public_members_url
    url_template_arguments:
      - name: member
        value: parameter username
    return_type: none
