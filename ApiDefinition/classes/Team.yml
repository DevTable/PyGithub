attributes:
  - name: id
    type: int
  - name: members_count
    type: int
  - name: members_url
    type: string
  - name: name
    type: string
  - name: organization
    type: Organization
  - name: permission
    type: string
  - name: repos_count
    type: int
  - name: repositories_url
    type: string
  - name: slug
    type: string
methods:
  - name: add_to_members
    end_point: PUT /teams/:id/members/:username
    parameters:
      - name: username
        type:
          union:
            - class: User
              attribute: login
            - class: AuthenticatedUser
              attribute: login
    url_template: attribute members_url
    url_template_arguments:
      - name: member
        value: parameter username
    return_type: none
  - name: add_to_repos
    end_point: PUT /teams/:id/repos/:org/:repo
    parameters:
      - name: repo
        type:
          class: Repository
          attribute: full_name
    url_template: end_point
    url_template_arguments:
      - name: id
        value: attribute id
      - name: org
        value: ownerFromRepo repo
      - name: repo
        value: nameFromRepo repo
    return_type: none
  - name: delete
    end_point: DELETE /teams/:id
    url_template: attribute url
    return_type: none
  - name: edit
    end_point: PATCH /teams/:id
    optional_parameters:
      - name: name
        type: string
      - name: permission
        type:
          enum: [admin, pull, push]
    url_template: attribute url
    post_arguments:
      - name: name
        value: parameter name
      - name: permission
        value: parameter permission
    effect: update
    return_type: none
  - name: get_members
    end_point: GET /teams/:id/members
    url_template: attribute members_url
    return_type:
      container: PaginatedList
      content: User
  - name: get_repos
    end_point: GET /teams/:id/repos
    url_template: attribute repositories_url
    return_type:
      container: PaginatedList
      content: Repository
  - name: has_in_members
    end_point: GET /teams/:id/members/:username
    parameters:
      - name: username
        type:
          union:
            - class: User
              attribute: login
            - class: AuthenticatedUser
              attribute: login
    url_template: attribute members_url
    url_template_arguments:
      - name: member
        value: parameter username
    return_from: status
    return_type: bool
  - name: has_in_repos
    end_point: GET /teams/:id/repos/:owner/:repo
    parameters:
      - name: repo
        type:
          class: Repository
          attribute: full_name
    url_template: end_point
    url_template_arguments:
      - name: id
        value: attribute id
      - name: owner
        value: ownerFromRepo repo
      - name: repo
        value: nameFromRepo repo
    return_from: status
    return_type: bool
  - name: remove_from_members
    end_point: DELETE /teams/:id/members/:username
    parameters:
      - name: username
        type:
          union:
            - class: User
              attribute: login
            - class: AuthenticatedUser
              attribute: login
    url_template: attribute members_url
    url_template_arguments:
      - name: member
        value: parameter username
    return_type: none
  - name: remove_from_repos
    end_point: DELETE /teams/:id/repos/:owner/:repo
    parameters:
      - name: repo
        type:
          class: Repository
          attribute: full_name
    url_template: end_point
    url_template_arguments:
      - name: id
        value: attribute id
      - name: owner
        value: ownerFromRepo repo
      - name: repo
        value: nameFromRepo repo
    return_type: none
